---

- name: Configure containerd storage
  when:
    - 'rke2_containerd_storage_device | length > 0'
    - 'ansible_mounts | selectattr("mount", "eq", rke2_containerd_storage_partition) | length == 0'
  block:
    - name: Ensure storage device is partitioned
      community.general.parted:
        device: '{{ rke2_containerd_storage_device }}'
        name: 'containerd'
        fs_type: '{{ rke2_containerd_storage_fstype }}'
        label: 'gpt'
        number: 1
        state: 'present'

    - name: Ensure container file system exists
      community.general.filesystem:
        dev: '{{ rke2_containerd_storage_partition }}'
        fstype: '{{ rke2_containerd_storage_fstype }}'

    - name: Collect file system UUID
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          blkid -o export {{ rke2_containerd_storage_partition }} | grep -E '^UUID' | cut -d= -f2
        executable: '/bin/bash'
      changed_when: false
      register: '_fs_uuid'

    - name: Ensure container file system is mounted
      ansible.posix.mount:
        src: 'UUID={{ _fs_uuid.stdout | trim }}'
        path: '{{ rke2_containerd_storage_directory }}'
        fstype: '{{ rke2_containerd_storage_fstype }}'
        passno: 2
        dump: 0
        state: 'mounted'

- name: Configure local path provisioner storage
  when:
    - 'rke2_local_path_provisioner_storage_device | length > 0'
    - 'ansible_mounts | selectattr("mount", "eq", rke2_local_path_provisioner_storage_directory) | length == 0'
  block:
    - name: Ensure storage device is partitioned
      community.general.parted:
        device: '{{ rke2_local_path_provisioner_storage_device }}'
        name: 'local_path_provisioner'
        fs_type: '{{ rke2_local_path_provisioner_storage_fstype }}'
        label: 'gpt'
        number: 1
        state: 'present'

    - name: Ensure local-path-provisioner file system exists
      community.general.filesystem:
        dev: '{{ rke2_local_path_provisioner_storage_partition }}'
        fstype: '{{ rke2_local_path_provisioner_storage_fstype }}'

    - name: Collect file system UUID
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          blkid -o export {{ rke2_local_path_provisioner_storage_partition }} | grep -E '^UUID' | cut -d= -f2
        executable: '/bin/bash'
      changed_when: false
      register: '_fs_uuid'

    - name: Ensure local-path-provisioner file system is mounted
      ansible.posix.mount:
        src: 'UUID={{ _fs_uuid.stdout | trim }}'
        path: '{{ rke2_local_path_provisioner_storage_directory }}'
        fstype: '{{ rke2_local_path_provisioner_storage_fstype }}'
        passno: 2
        dump: 0
        state: 'mounted'

    - name: Set directory mode of local-path-provisioner mount
      ansible.builtin.file:
        state: 'directory'
        path: '{{ rke2_local_path_provisioner_storage_directory }}'
        owner: 'root'
        group: 'root'
        mode: '1777'
        setype: 'container_file_t'
